function [fitresult, gof] = createFits(x, y, phi, theta)
%CREATEFITS(X,Y,PHI,THETA)
%  Create fits.
%
%  Data for 'phi_x_y' fit:
%      X Input : x
%      Y Input : y
%      Z Output: phi
%  Data for 'theta_x_y' fit:
%      X Input : x
%      Y Input : y
%      Z Output: theta
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 21-May-2018 17:37:53

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 2, 1 );
gof = struct( 'sse', cell( 2, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'phi_x_y'.
[xData, yData, zData] = prepareSurfaceData( x, y, phi );

% Set up fittype and options.
ft = fittype( 'a*x+b*y+c', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.MaxFunEvals = 10000;
opts.MaxIter = 10000;
opts.Robust = 'LAR';
opts.StartPoint = [0.0 0.0 0.0];
opts.TolFun = 1e-10;
opts.TolX = 1e-10;

% Fit model to data.
[fitresult{1}, gof(1)] = fit( [xData, yData], zData, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'phi_x_y' );

% Plot fit with data.
subplot( 2, 2, 2 );
h = plot( fitresult{1}, [xData, yData], zData );
legend( h, 'phi\_x\_y', 'phi vs. x, y', 'Location', 'NorthEast' );
% Label axes
xlabel x
ylabel y
zlabel phi
grid on
view( -22.3, 28.4 );

% Plot residuals.
subplot( 2, 2, 4 );
h = plot( fitresult{1}, [xData, yData], zData, 'Style', 'Residual' );
legend( h, 'phi\_x\_y - residuals', 'Location', 'NorthEast' );
% Label axes
xlabel x
ylabel y
zlabel phi
grid on
view( -22.3, 28.4 );

% Make contour plot.
subplot( 1, 2, 1 );
h = plot( fitresult{1}, [xData, yData], zData, 'Style', 'Contour' );
legend( h, 'phi\_x\_y', 'phi vs. x, y', 'Location', 'NorthEast' );
% Label axes
xlabel x
ylabel y
grid on

%% Fit: 'theta_x_y'.
[xData, yData, zData] = prepareSurfaceData( x, y, theta );

% Set up fittype and options.
ft = fittype( 'd*x+e*y+f', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.DiffMinChange = 1e-10;
opts.Display = 'Off';
opts.MaxFunEvals = 10000;
opts.MaxIter = 10000;
opts.StartPoint = [0.0 0.0 0.0];
opts.TolFun = 1e-10;
opts.TolX = 1e-10;

% Fit model to data.
[fitresult{2}, gof(2)] = fit( [xData, yData], zData, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'theta_x_y' );

% Plot fit with data.
subplot( 2, 2, 2 );
h = plot( fitresult{2}, [xData, yData], zData );
legend( h, 'theta\_x\_y', 'theta vs. x, y', 'Location', 'NorthEast' );
% Label axes
xlabel x
ylabel y
zlabel theta
grid on
view( 61.7, 18.0 );

% Plot residuals.
subplot( 2, 2, 4 );
h = plot( fitresult{2}, [xData, yData], zData, 'Style', 'Residual' );
legend( h, 'theta\_x\_y - residuals', 'Location', 'NorthEast' );
% Label axes
xlabel x
ylabel y
zlabel theta
grid on
view( 61.7, 18.0 );

% Make contour plot.
subplot( 1, 2, 1 );
h = plot( fitresult{2}, [xData, yData], zData, 'Style', 'Contour' );
legend( h, 'theta\_x\_y', 'theta vs. x, y', 'Location', 'NorthEast' );
% Label axes
xlabel x
ylabel y
grid on


